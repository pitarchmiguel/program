---
import { db } from '../../firebase';
import { doc, getDoc, collection, getDocs } from 'firebase/firestore';
import { format, parseISO } from 'date-fns';

const id = Astro.url.pathname.split('/').pop();
console.log('ID del workout:', id);

if (!id) {
    console.error('No se proporcionó ID');
    return Astro.redirect('/edit');
}

let workoutData = null;
let isLoading = true;
let error = null;

try {
    // Verificar la conexión con Firestore
    console.log('Verificando conexión con Firestore...');
    const workoutsCollection = collection(db, "workouts");
    const snapshot = await getDocs(workoutsCollection);
    console.log('Número total de documentos en la colección:', snapshot.size);
    
    // Listar todos los IDs disponibles para diagnóstico
    const allIds = snapshot.docs.map(doc => doc.id);
    console.log('IDs disponibles en la colección:', allIds);
    
    console.log('Intentando obtener el documento con ID:', id);
    const docRef = doc(db, "workouts", id);
    const docSnap = await getDoc(docRef);

    if (docSnap.exists()) {
        const data = docSnap.data();
        console.log('Datos del workout:', data);
        workoutData = {
            id: docSnap.id,
            date: format(parseISO(data.date), 'yyyy-MM-dd'),
            letter: data.letter,
            title: data.title,
            description: data.description?.replace(/<br>/g, '\n') || '',
            notes: data.notes?.replace(/<br>/g, '\n') || ''
        };
        console.log('Datos procesados:', workoutData);
    } else {
        console.error('No se encontró el workout con ID:', id);
        console.error('Documento no existe en la colección workouts');
        console.error('IDs disponibles:', allIds);
        error = 'No se encontró el entrenamiento';
    }
} catch (error) {
    console.error('Error al obtener el workout:', error);
    console.error('Detalles del error:', {
        message: error.message,
        code: error.code,
        stack: error.stack
    });
    error = 'Error al cargar el entrenamiento';
} finally {
    isLoading = false;
}
---

<!DOCTYPE html>
<html lang="es">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Editar Entrenamiento</title>
    </head>
    <body class="w-full h-full flex flex-col bg-[#242424] text-[#f9f9f9]">
        <div class="w-full h-full my-8 p-6">
            <h1 class="text-3xl font-bold mb-6">Editar Entrenamiento</h1>
            
            {isLoading ? (
                <div class="text-center">
                    <p class="text-xl text-gray-400 mb-4">Cargando entrenamiento...</p>
                </div>
            ) : error ? (
                <div class="text-center">
                    <p class="text-xl text-gray-400 mb-4">{error}</p>
                    <a href="/edit" class="text-sky-500 hover:text-sky-400">Volver a la lista</a>
                </div>
            ) : workoutData ? (
                <form id="workoutForm" class="space-y-4" method="POST">
                    <input type="hidden" id="workoutId" name="workoutId" value={workoutData.id} />
                    <div>
                        <label for="workoutDate" class="block text-sm font-medium">Fecha</label>
                        <input 
                            type="date" 
                            id="workoutDate" 
                            name="workoutDate" 
                            value={workoutData.date} 
                            required 
                            class="p-3 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-[#242424]" 
                        />
                    </div>
                    <div class="flex space-x-4">
                        <div class="flex-1">
                            <label for="workoutLetter" class="block text-sm font-medium">Letra</label>
                            <input 
                                type="text" 
                                id="workoutLetter" 
                                name="workoutLetter" 
                                value={workoutData.letter} 
                                maxlength="1" 
                                required 
                                class="p-3 mt-1 block w-16 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-[#242424]" 
                            />
                        </div>
                        <div class="flex-auto">
                            <label for="workoutTitle" class="block text-sm font-medium">Título</label>
                            <input 
                                type="text" 
                                id="workoutTitle" 
                                name="workoutTitle" 
                                value={workoutData.title} 
                                required 
                                class="p-3 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-[#242424]" 
                            />
                        </div>
                    </div>
                    <div>
                        <label for="workoutDescription" class="block text-sm font-medium">Workout</label>
                        <textarea 
                            id="workoutDescription" 
                            name="workoutDescription" 
                            rows="7" 
                            required 
                            class="p-3 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-[#242424]"
                        >{workoutData.description}</textarea>
                    </div>
                    <div>
                        <label for="workoutNotes" class="block text-sm font-medium">Notas</label>
                        <textarea 
                            id="workoutNotes" 
                            name="workoutNotes" 
                            rows="4" 
                            class="p-3 mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-[#242424]"
                        >{workoutData.notes}</textarea>
                    </div>
                    <div class="flex justify-between">
                        <button 
                            type="submit" 
                            id="submitButton"
                            name="submitButton"
                            class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-sky-600 hover:bg-sky-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-300"
                        >
                            Guardar cambios
                        </button>
                        <a 
                            href="/edit" 
                            id="cancelButton"
                            name="cancelButton"
                            class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-300"
                        >
                            Cancelar
                        </a>
                    </div>
                </form>
            ) : (
                <div class="text-center">
                    <p class="text-xl text-gray-400 mb-4">Error al cargar el entrenamiento</p>
                    <a href="/edit" class="text-sky-500 hover:text-sky-400">Volver a la lista</a>
                </div>
            )}
        </div>

        <script is:inline>
            document.addEventListener('DOMContentLoaded', function() {
                var form = document.getElementById('workoutForm');
                if (form) {
                    form.addEventListener('submit', function(e) {
                        e.preventDefault();
                        
                        var formData = {
                            id: document.getElementById('workoutId').value,
                            date: document.getElementById('workoutDate').value,
                            letter: document.getElementById('workoutLetter').value,
                            title: document.getElementById('workoutTitle').value,
                            description: document.getElementById('workoutDescription').value,
                            notes: document.getElementById('workoutNotes').value
                        };

                        console.log('Enviando datos:', formData);

                        fetch('/api/updateWorkout', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(formData)
                        })
                        .then(function(response) {
                            console.log('Respuesta del servidor:', response);
                            return response.json().then(data => {
                                console.log('Datos de respuesta:', data);
                                if (!response.ok) {
                                    throw new Error(data.error || 'Error en la respuesta del servidor');
                                }
                                window.location.href = '/edit';
                            });
                        })
                        .catch(function(error) {
                            console.error('Error al guardar los cambios:', error);
                            alert('Error al guardar los cambios: ' + error.message);
                        });
                    });
                }
            });
        </script>
    </body>
</html> 